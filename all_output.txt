To create a calculator with colorful buttons, we will use Python's Tkinter library for GUI development. The architecture of the application will be divided into three main parts:

1. `main.py`: This is the entry point of the application. It will create an instance of the `Calculator` class and start the Tkinter event loop.

2. `calculator.py`: This file will contain the `Calculator` class. This class will handle the creation of the calculator's GUI and the logic for performing calculations.

3. `button.py`: This file will contain the `Button` class. This class will handle the creation of colorful buttons.

Let's start with the `main.py` file:

main.py
```python
from calculator import Calculator

def main():
    # Create an instance of the Calculator class
    calculator = Calculator()

    # Start the Tkinter event loop
    calculator.run()

if __name__ == "__main__":
    main()
```

Next, let's move on to the `calculator.py` file:

calculator.py
```python
import tkinter as tk
from button import Button

class Calculator:
    def __init__(self):
        self.window = tk.Tk()
        self.window.title("Calculator")
        self.display = tk.Entry(self.window, width=20)
        self.display.grid(row=0, column=0, columnspan=4)
        self.buttons = self.create_buttons()

    def create_buttons(self):
        buttons = []
        colors = ['red', 'green', 'blue', 'yellow']
        for i in range(1, 10):
            button = Button(self.window, text=str(i), bg=colors[i%4], command=lambda i=i: self.update_display(i))
            buttons.append(button)
        return buttons

    def update_display(self, value):
        self.display.insert(tk.END, str(value))

    def run(self):
        self.window.mainloop()
```

Finally, let's create the `button.py` file:

button.py
```python
import tkinter as tk

class Button(tk.Button):
    def __init__(self, master=None, cnf={}, **kw):
        super().__init__(master, cnf, **kw)
        self.grid()
```

Please note that this is a very basic calculator that only supports entering numbers from 1 to 9. The buttons are colored in a cyclic order: red, green, blue, yellow. You can extend this basic structure to support more operations and functionalities.

For Python, you should create a `requirements.txt` file to specify the dependencies of the project. In this case, the only dependency is Tkinter, which is included in the standard library, so there's no need for a `requirements.txt` file.